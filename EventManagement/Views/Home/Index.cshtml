@model EventManagement.ViewModels.EventsViewModel




<style>
    /* Style the tab */
    .tab {
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
    }

        /* Style the buttons that are used to open the tab content */
        .tab button {
            background-color: inherit;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 14px 16px;
            transition: 0.3s;
        }

            /* Change background color of buttons on hover */
            .tab button:hover {
                background-color: #ddd;
            }

            /* Create an active/current tablink class */
            .tab button.active {
                background-color: #ccc;
            }

    /* Style the tab content */
    .tabcontent {
        display: none;
        padding: 6px 12px;
        border: 1px solid #ccc;
        border-top: none;
    }


    .event {
        font-family: Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

        .event td, .event th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        .event tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .event tr:hover {
            background-color: #ddd;
        }

        .event th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: #4CAF50;
            color: white;
        }

    #myInput {
        background-image: url('/css/searchicon.png');
        background-position: 10px 10px;
        background-repeat: no-repeat;
        width: 100%;
        font-size: 16px;
        padding: 12px 20px 12px 40px;
        border: 1px solid #ddd;
        margin-bottom: 12px;
    }
</style>
<html>
<head>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
</head>

<body>




    <div style="height:10px;"></div>
    <div class="tab">
        <button class="tablinks active" onclick="openTab(event, 'Active')">Active Events</button>
        <button class="tablinks" onclick="openTab(event, 'All')">All Events</button>

    </div>
    <div id="Active" class="tabcontent" style="display:block;">
        <table class="event">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Location</th>
                    <th>Category</th>

                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var all in @Model.ActiveEvents)
                {
    <tr>
        <td>
            @all.Name
        </td>
        <td>
            @all.City
        </td>
        <td>
            @all.CategoryName
        </td>

        <td>
            <a href="@Url.Action("ViewDetails", "Event" , new { id=@all.EventId })">View Details</a> |
            <a href="@Url.Action("EditEvent", "Event" , new { id=@all.EventId })">Edit</a> |
            <a href="#" onclick="deleteRecord(@all.EventId)">Delete</a>
        </td>
    </tr>
       }
            </tbody>


        </table>
    </div>
    <!-- Tab content -->
    <div id="All" class="tabcontent">
        <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for names.." title="Type in a name">

        <table class="event">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Location</th>
                    <th>Category</th>
                    <th>Status</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.AllEvents.Count(); i++)

                {
                    var all = @Model.AllEvents[i];
    <tr>
        <td>
            @all.Name
        </td>
        <td>
            @all.City
        </td>
        <td>
            @all.CategoryName
        </td>
        <td>
            @all.Status
        </td>
        <td>
            <a href="@Url.Action("ViewDetails", "Event" , new { id=@all.EventId })">View Details</a> |
            <a href="@Url.Action("Edit", "Event" , new { id=@all.EventId })">Edit</a> |
            <a href="#" onclick="deleteRecord(@all.EventId)">Delete</a>
        </td>
    </tr>
       }
            </tbody>


        </table>
    </div>
</body>
</html>

<script>function openTab(evt, eventType) {
        // Declare all variables
        var i, tabcontent, tablinks;

        // Get all elements with class="tabcontent" and hide them

        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        // Show the current tab, and add an "active" class to the button that opened the tab

        document.getElementById(eventType).style.display = "block";
        evt.currentTarget.className += " active";
    }

    function myFunction() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("All");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

    function deleteRecord(id) {
        debugger;
        swal({
            title: "Are you sure?",
            text: "Once deleted, you will not be able to recover this record!",
            type: "warning",
            showCancelButton: true,
            closeOnConfirm: false,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Delete",
            confirmButtonColor: "#ec6c62"
        },
            function () {
                $.ajax({
                    type: "POST",
                    url: "/Event/Delete/",
                    data: {
                        id: id // < note use of 'this' here
                    },
                    type: "DELETE"
                })
                    .done(function (data) {
                        sweetAlert
                            ({
                                title: "Deleted!",
                                text: "Your file was successfully deleted!",
                                type: "success"
                            },
                                function () {
                                    window.location.href = '/Event/Index';
                                });
                    })
                    .error(function (data) {
                        swal("Oops", "We couldn't connect to the server!", "error");
                    });
            });
    }

    </script>
